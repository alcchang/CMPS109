==20018== Memcheck, a memory error detector
==20018== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20018== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==20018== Command: ./yshell
==20018== 
yshell: Bad: no such function
==20018== 
==20018== HEAP SUMMARY:
==20018==     in use at exit: 1,281 bytes in 29 blocks
==20018==   total heap usage: 279 allocs, 250 frees, 9,408 bytes allocated
==20018== 
==20018== 1,281 (64 direct, 1,217 indirect) bytes in 1 blocks are definitely lost in loss record 16 of 16
==20018==    at 0x4C29203: operator new(unsigned long) (vg_replace_malloc.c:334)
==20018==    by 0x413265: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:104)
==20018==    by 0x412CDE: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:491)
==20018==    by 0x4122BB: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:102)
==20018==    by 0x4117BD: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, inode*, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:615)
==20018==    by 0x410A35: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:1097)
==20018==    by 0x40F895: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr.h:319)
==20018==    by 0x40EA2A: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:620)
==20018==    by 0x40DFFA: _ZSt11make_sharedI5inodeI9file_typeEESt10shared_ptrIT_EDpOT0_ (shared_ptr.h:636)
==20018==    by 0x40BC30: inode_state::inode_state() (file_sys.cpp:38)
==20018==    by 0x414B89: main (main.cpp:53)
==20018== 
==20018== LEAK SUMMARY:
==20018==    definitely lost: 64 bytes in 1 blocks
==20018==    indirectly lost: 1,217 bytes in 28 blocks
==20018==      possibly lost: 0 bytes in 0 blocks
==20018==    still reachable: 0 bytes in 0 blocks
==20018==         suppressed: 0 bytes in 0 blocks
==20018== 
==20018== For counts of detected and suppressed errors, rerun with: -v
==20018== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
